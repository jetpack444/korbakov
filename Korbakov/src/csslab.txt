Контрольные вопросы

1. Чем отличается display: flex от display: grid?
    Display: flex и display: grid — это два инструмента в CSS, которые используются для создания гибких и адаптивных макетов.
    Они имеют разные подходы и возможности.
    Flexbox (или Flexible Box Layout) предназначен для создания одномерных макетов, где элементы располагаются
    в одном направлении (горизонтально или вертикально).
    Элементы могут изменять свою величину, чтобы заполнять доступное пространство.
    CSS Grid предназначен для создания двумерных макетов, где элементы располагаются в двух направлениях
    (горизонтально и вертикально). Позволяет создавать сложные сетки с
    явным контролем за размещением элементов в ячейках

2. Как сделать адаптивное меню для мобильных устройств?

    1. Два состояния меню
    Десктопная версия:
    — Обычное горизонтальное меню (видно сразу).

    Мобильная версия:
    — Меню скрыто, показывается только иконка-бургер (☰).
    — При клике на бургер меню плавно появляется (обычно вертикальный список).

    2. Как это работает
    Гибкий макет:
    При уменьшении экрана (например, до 768px) горизонтальное меню автоматически скрывается, остается только бургер.

    Интерактивность:
    Клик по бургеру:
    — Меню плавно «выезжает» (с анимацией).
    — Бургер превращается в крестик (×), чтобы закрыть меню.

    3. Техническая основа
    CSS-медиазапросы:
    Определяют, когда переключаться между десктопным и мобильным видом.

    JavaScript:
    Обрабатывает клик по бургеру, добавляя/убирая классы, которые показывают или скрывают меню.

3. Какие свойства CSS3 используются для анимаций?

    1. Основные свойства анимации
    animation
    Сокращённое свойство для всех параметров анимации.

    animation-name
    Указывает имя @keyframes-анимации.

    animation-duration
    Длительность анимации (например, 2s).

    animation-timing-function
    Кривая скорости анимации:
    ease (по умолчанию), linear, ease-in, ease-out, ease-in-out, cubic-bezier().

    animation-delay
    Задержка перед стартом (1s).

    animation-iteration-count
    Количество повторов: infinite или число (3).

    animation-direction
    Направление:
    normal (вперёд), reverse (назад), alternate (туда-обратно), alternate-reverse.

    animation-fill-mode
    Как элемент выглядит до/после анимации:
    none, forwards (сохраняет конечный стиль), backwards (применяет первый ключевой кадр сразу), both.

    2. Правило @keyframes
    Определяет этапы анимации:

    css
    @keyframes example {
      0%   { opacity: 0; }
      100% { opacity: 1; }
    }
    Можно использовать from (0%) и to (100%).

    3. Трансформации (transform)

    Часто сочетаются с анимацией:
    translate() – перемещение.
    rotate() – поворот.
    scale() – масштабирование.
    skew() – наклон.

    4. Переходы (transition)
    Упрощённые анимации при изменении свойств:
    transition-property – какое свойство анимировать (all, opacity).
    transition-duration – длительность.
    transition-timing-function – кривая скорости.
    transition-delay – задержка.

4. Как изменить стиль элемента при наведении?

    Для этого используется CSS-псевдокласс :hover,
    который применяет стили, когда пользователь наводит курсор на элемент.

    /* Изменение цвета кнопки */
    button:hover {
      background-color: #4CAF50;
    }

    /* Подчёркивание ссылки */
    a:hover {
      text-decoration: underline;
    }

    /* Увеличение карточки */
    .card:hover {
      transform: scale(1.05);
    }

5. Зачем нужен viewport в HTML?

    Viewport (видовое окно) — это область веб-страницы, которую пользователь видит на экране устройства без прокрутки. 
    В HTML он настраивается через метатег <meta name="viewport"> и критически важен для корректного отображения сайта 
    на мобильных устройствах.
    
    1. Основная задача
    Без viewport мобильные браузеры будут имитировать широкий экран (например, 980px), сжимая страницу до 
    размеров маленького дисплея. Это приводит:
    
    К мелкому, нечитаемому тексту.
    
    Неадаптивному макету.
    
    Горизонтальной прокрутке.
